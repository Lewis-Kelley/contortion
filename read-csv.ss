(define (read-csv filename)
  (let* ((file (open-input-file filename))
         (file-contents (get-string-some file)))
    (parse-csv-lines file-contents)))

(define (parse-csv-lines contents)
  (let* ((lines (split-string contents '(#\newline)))
         (terms (map (lambda (line)
                       (split-string line '(#\,)))
                     lines)))
    (map (lambda (line) (map string->number line)) terms)))

(define (split-string str char-list)
  (define (form-char-lists str)
    (if (zero? (string-length str))
      '(())
      (let ((first-char (string-car str))
            (rest (form-char-lists (string-cdr str))))
        (if (member first-char char-list)
            (cons '() rest)
            (cons (cons first-char (car rest))
                  (cdr rest))))))
  (map list->string (form-char-lists str)))

(define (string-car str)
  (string-ref str 0))

(define (string-cdr str)
  (substring str 1 (string-length str)))
